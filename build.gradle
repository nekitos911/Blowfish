plugins {
    id 'application'
//    id 'groovy'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'me.champeau.gradle.jmh' version '0.5.0'
}

version = "1.0.0"

applicationDefaultJvmArgs = ["--enable-preview"]

mainClassName = 'ru.hw.blowfish.FxMain'
jar {
    manifest {
        attributes 'Main-Class': 'ru.hw.blowfish.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    jcenter()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

//    compile group: 'me.champeau.gradle', name: 'jmh-gradle-plugin', version: '0.4.6'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.5.2'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
}

javafx {
    version = "14"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}

test {
    jvmArgs(['--enable-preview'])
    useJUnitPlatform()
}

run {
    jvmArgs(['--enable-preview'])
}

task(benchmark, dependsOn: 'classes', type: JavaExec) {
    main = 'ru.hw.blowfish.benchmark.Benchmark'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs += ['-verbose:gc', '-XX:+TieredCompilation', '-Xms3096m']
//    args 'mrhaki'
//    systemProperty 'simple.message', 'Hello '
}
